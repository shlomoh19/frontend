{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport let LoginPageComponent = /*#__PURE__*/(() => {\n  class LoginPageComponent {\n    constructor(elementRef, http) {\n      this.elementRef = elementRef;\n      this.http = http;\n    }\n    ngOnInit() {\n      this.canvas = this.elementRef.nativeElement.querySelector('#background');\n      this.ctx = this.canvas.getContext('2d');\n      this.canvas.width = window.innerWidth;\n      this.canvas.height = window.innerHeight;\n      this.backgroundAnimation();\n    }\n    login() {\n      this.http.post('/api/login', {\n        username: this.username,\n        password: this.password\n      }).subscribe(response => {\n        console.log(response);\n      });\n    }\n    onResize(event) {\n      this.canvas.width = event.target.innerWidth;\n      this.canvas.height = event.target.innerHeight;\n    }\n    backgroundAnimation() {\n      const particles = [];\n      const numParticles = 600;\n      class Particle {\n        constructor(x, y) {\n          this.x = x;\n          this.y = y;\n          this.size = Math.random() * 0.5 + 0.5;\n          this.speedX = Math.random() * 2 - 1.5;\n          this.speedY = Math.random() * 2 - 1.5;\n        }\n        update(canvasWidth, canvasHeight) {\n          this.x += this.speedX;\n          this.y += this.speedY;\n          // Vérifie si la particule est hors de l'écran et la replace de l'autre côté\n          if (this.x < 0) {\n            this.x = canvasWidth;\n          } else if (this.x > canvasWidth) {\n            this.x = 0;\n          }\n          if (this.y < 0) {\n            this.y = canvasHeight;\n          } else if (this.y > canvasHeight) {\n            this.y = 0;\n          }\n        }\n        draw(ctx) {\n          //console.log('Drawing particle:', this);\n          ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n          ctx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\n          ctx.lineWidth = 2;\n          ctx.beginPath();\n          ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n        }\n      }\n      const connectParticles = () => {\n        const particlesDistance = 100;\n        for (let a = 0; a < numParticles; a++) {\n          for (let b = a; b < numParticles; b++) {\n            if (particles[a] && particles[b]) {\n              // Ajout de cette ligne pour vérifier si les particules existent\n              const dx = particles[a].x - particles[b].x;\n              const dy = particles[a].y - particles[b].y;\n              const distance = Math.sqrt(dx * dx + dy * dy);\n              if (distance < particlesDistance) {\n                this.ctx.beginPath();\n                this.ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\n                this.ctx.lineWidth = 1.5;\n                this.ctx.moveTo(particles[a].x, particles[a].y);\n                this.ctx.lineTo(particles[b].x, particles[b].y);\n                this.ctx.stroke();\n                this.ctx.closePath();\n              }\n            }\n          }\n        }\n      };\n      const initParticles = () => {\n        for (let i = 0; i < numParticles; i++) {\n          const x = Math.random() * this.canvas.width;\n          const y = Math.random() * this.canvas.height;\n          particles.push(new Particle(x, y));\n        }\n      };\n      const animateParticles = () => {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        let particlesToRemove = [];\n        for (let particle of particles) {\n          particle.update(this.canvas.width, this.canvas.height); // Ajout des paramètres\n          particle.draw(this.ctx);\n          if (particle.size <= 0.2) {\n            particlesToRemove.push(particle);\n          }\n        }\n        for (let particle of particlesToRemove) {\n          const index = particles.indexOf(particle);\n          if (index !== -1) {\n            particles.splice(index, 1);\n          }\n        }\n        connectParticles();\n        requestAnimationFrame(animateParticles);\n      };\n      initParticles();\n      animateParticles();\n    }\n  }\n  LoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n    return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  LoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPageComponent,\n    selectors: [[\"app-login-page\"]],\n    hostBindings: function LoginPageComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function LoginPageComponent_resize_HostBindingHandler($event) {\n          return ctx.onResize($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 30,\n    vars: 2,\n    consts: [[\"rel\", \"preconnect\", \"href\", \"https://fonts.gstatic.com\"], [\"href\", \"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap\", \"rel\", \"stylesheet\"], [1, \"login-container\"], [1, \"white-space\"], [1, \"login-form-container\"], [\"src\", \"assets/text.png\", \"alt\", \"Logo de la soci\\u00E9t\\u00E9\", 1, \"company-logo\"], [3, \"ngSubmit\"], [\"for\", \"username\"], [\"id\", \"username\", \"name\", \"username\", \"type\", \"text\", \"placeholder\", \"Nom d'utilisateur\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"id\", \"password\", \"name\", \"password\", \"type\", \"password\", \"placeholder\", \"Mot de Passe\", 2, \"margin-bottom\", \"35px\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 2, \"margin-bottom\", \"10px\"], [\"href\", \"#\"], [1, \"restricted-access\"], [1, \"overlay-content\"], [\"id\", \"floating-logo\", \"src\", \"assets/mainLogo.png\", \"alt\", \"img\", 1, \"overlay-image\"], [1, \"separator\"], [1, \"overlay-text\", \"typing-effect\"], [1, \"cta-button\"], [\"id\", \"background\"], [1, \"black-overlay\"]],\n    template: function LoginPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"link\", 0)(1, \"link\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵelement(5, \"img\", 5);\n        i0.ɵɵelementStart(6, \"h2\");\n        i0.ɵɵtext(7, \"Se connecter \\u00E0 IZNES\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Nom d'utilisateur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginPageComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Mot de Passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginPageComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 11);\n        i0.ɵɵtext(16, \"S'IDENTIFIER\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"a\", 12);\n        i0.ɵɵtext(18, \"Mot de passe oubli\\u00E9?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\", 13);\n        i0.ɵɵtext(20, \"IZNES est un environnement priv\\u00E9 soumis \\u00E0 un acc\\u00E8s autoris\\u00E9 uniquement.\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 14);\n        i0.ɵɵelement(22, \"img\", 15)(23, \"hr\", 16);\n        i0.ɵɵelementStart(24, \"h3\", 17);\n        i0.ɵɵtext(25, \"The power of Blockchain for disrupting Fund Distribution \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 18);\n        i0.ɵɵtext(27, \"EN SAVOIR PLUS\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(28, \"canvas\", 19)(29, \"div\", 20);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\".login-container[_ngcontent-%COMP%]{position:relative;width:100%;height:100%}.white-space[_ngcontent-%COMP%]{position:absolute;left:0;top:0;width:35%;height:100%;background-color:#fff;z-index:1;display:flex;justify-content:center;align-items:center}.login-form-container[_ngcontent-%COMP%]{width:80%;text-align:center;font-family:Metropolis,Avenir Next,Helvetica Neue,Arial,sans-serif}h2[_ngcontent-%COMP%]{margin-bottom:20px;font-weight:600;font-size:24px;color:#545454}form[_ngcontent-%COMP%]{display:flex;flex-direction:column}label[_ngcontent-%COMP%]{text-align:left;margin:10px 0 0;font-weight:700;color:#545454;line-height:20px;position:static;width:100%;font-size:13px}input[_ngcontent-%COMP%]{margin-bottom:15px;padding:10px;border:1px solid #ccc;border-radius:4px}button[_ngcontent-%COMP%]{padding:10px;background-color:#1a5eb8;color:#fff;font-weight:700;border-radius:4px;cursor:pointer;border:none;font-size:13px}button[_ngcontent-%COMP%]:hover{background-color:#0f468c}a[_ngcontent-%COMP%]{display:inline-block;margin-top:10px;color:#0f468c;text-decoration:none;font-size:13px}a[_ngcontent-%COMP%]:hover{text-decoration:underline}.restricted-access[_ngcontent-%COMP%]{margin-top:40px;font-size:13px;color:#666;font-weight:600}canvas#background[_ngcontent-%COMP%]{position:absolute;left:30%;top:0;width:70%;height:100%}#background[_ngcontent-%COMP%]{position:absolute;top:0;left:0;z-index:-1}.overlay-content[_ngcontent-%COMP%]{position:absolute;top:40%;left:67.5%;transform:translate(-50%,-50%);text-align:center;z-index:2;margin:0;padding:0}.overlay-text[_ngcontent-%COMP%]{color:#fff;font-size:18px;margin-top:0;font-family:Metropolis,Avenir Next,Helvetica Neue,Arial,sans-serif;margin-bottom:0}.company-logo[_ngcontent-%COMP%]{width:280px;height:auto;margin-top:7.5em;margin-left:7.5em;position:absolute;top:0;left:0}.overlay-image[_ngcontent-%COMP%]{max-width:550px;display:block;margin:0 auto;margin-bottom:-5rem;opacity:.95;pointer-events:none;-webkit-user-select:none;user-select:none;animation:_ngcontent-%COMP%_float 4s ease-in-out infinite}@keyframes _ngcontent-%COMP%_float{0%{transform:translatey(0)}50%{transform:translatey(-10px)}to{transform:translatey(0)}}.black-overlay[_ngcontent-%COMP%]{position:absolute;top:0;left:35%;width:100%;height:100%;background-color:#00000031;z-index:1}.typing-effect[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;font-family:monospace;border-right:.2em solid rgb(255,255,255);animation:_ngcontent-%COMP%_typing 4s steps(50,end) forwards,blink-caret 4s steps(50,end) forwards;font-family:Montserrat,sans-serif;font-weight:700}@keyframes _ngcontent-%COMP%_typing{0%{width:0}to{width:100%}}@keyframes _ngcontent-%COMP%_blink-caret{0%,to{border-right-color:transparent}50%{border-right-color:#fff}}.separator[_ngcontent-%COMP%]{border:0;height:1.5px;background-image:linear-gradient(to right,rgb(255,255,255),rgb(255,255,255),rgb(255,255,255));margin:1.5rem auto 2rem;width:50%}.cta-button[_ngcontent-%COMP%]{margin-top:20px;padding:10px 20px;border:2px solid white;border-radius:s5px;color:#fff;background:transparent;cursor:pointer;transition:all .3s ease;font-family:Metropolis,Avenir Next,Helvetica Neue,Arial,sans-serif;font-weight:300}.cta-button[_ngcontent-%COMP%]:hover{background:white;color:#000}\"]\n  });\n  return LoginPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}